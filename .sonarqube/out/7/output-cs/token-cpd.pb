›
<E:\repos\e-shop\CatalogService\CatalogService.Web\Program.cs
	namespace 	
CatalogService
 
. 
Web 
; 
public 
class 
Program 
{		 
public

 

static

 
async

 
Task

 
Main

 !
(

! "
string

" (
[

( )
]

) *
args

+ /
)

/ 0
{ 
var 
builder 
= 
WebApplication $
.$ %
CreateBuilder% 2
(2 3
args3 7
)7 8
;8 9
builder 
. 
Services 
. 
AddAppServices '
(' (
)( )
;) *
builder 
. 
Services 
. %
AddInfrastructureServices 2
(2 3
builder3 :
.: ;
Configuration; H
)H I
;I J
builder 
. 
Services 
. 
AddControllers '
(' (
)( )
;) *
var 
app 
= 
builder 
. 
Build 
(  
)  !
;! "
var 
messageBroker 
= 
app 
.  
Services  (
.( )
GetRequiredService) ;
<; <
IMessageBroker< J
>J K
(K L
)L M
;M N
await 
messageBroker 
. 
InitializeAsync +
(+ ,
), -
.- .
ConfigureAwait. <
(< =
false= B
)B C
;C D
app 
. 
UseHttpsRedirection 
(  
)  !
;! "
app 
. 
UseAuthorization 
( 
) 
; 
app 
. 
MapControllers 
( 
) 
; 
using!! 
(!! 
var!! 
scope!! 
=!! 
app!! 
.!! 
Services!! '
.!!' (
CreateScope!!( 3
(!!3 4
)!!4 5
)!!5 6
{"" 	
var## 
dbInitializer## 
=## 
scope##  %
.##% &
ServiceProvider##& 5
.##5 6
GetRequiredService##6 H
<##H I
IDbInitializer##I W
>##W X
(##X Y
)##Y Z
;##Z [
await$$ 
dbInitializer$$ 
.$$  
InitializeAsync$$  /
($$/ 0
)$$0 1
.$$1 2
ConfigureAwait$$2 @
($$@ A
false$$A F
)$$F G
;$$G H
}%% 	
app'' 
.'' 
Run'' 
('' 
)'' 
;'' 
}(( 
})) › 
SE:\repos\e-shop\CatalogService\CatalogService.Web\Controllers\ProductsController.cs
	namespace 	
CatalogService
 
. 
Web 
. 
Controllers (
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
ProductsController #
:$ %
ControllerBase& 4
{ 
[ 	
HttpGet	 
] 
public 
Task 
< 
PaginatedList !
<! "

ProductDto" ,
>, -
>- .
Get/ 2
(2 3
[ 
FromServices 
] 
ISender "
sender# )
,) *
[ 
	FromQuery 
] 
GetProductsQuery (
query) .
) 
{ 	
return 
sender 
. 
Send 
( 
query $
)$ %
;% &
} 	
[ 	
HttpPost	 
] 
public 
Task 
< 
int 
> 
Create 
(  
[ 
FromServices 
] 
ISender "
sender# )
,) *
[ 
FromBody 
]  
CreateProductCommand +
command, 3
) 	
{   	
return!! 
sender!! 
.!! 
Send!! 
(!! 
command!! &
)!!& '
;!!' (
}"" 	
[$$ 	
HttpPut$$	 
($$ 
$str$$ 
)$$ 
]$$ 
public%% 
async%% 
Task%% 
<%% 
IResult%% !
>%%! "
Update%%# )
(%%) *
[%%* +
FromServices%%+ 7
]%%7 8
ISender%%9 @
sender%%A G
,%%G H
int%%I L
id%%M O
,%%O P
[%%Q R
FromBody%%R Z
]%%Z [ 
UpdateProductCommand%%\ p
command%%q x
)%%x y
{&& 	
if'' 
('' 
id'' 
!='' 
command'' 
.'' 
Id''  
)''  !
{(( 
return)) 
Results)) 
.)) 

BadRequest)) )
())) *
)))* +
;))+ ,
}** 
await,, 
sender,, 
.,, 
Send,, 
(,, 
command,, %
),,% &
.,,& '
ConfigureAwait,,' 5
(,,5 6
false,,6 ;
),,; <
;,,< =
return.. 
Results.. 
... 
	NoContent.. $
(..$ %
)..% &
;..& '
}// 	
[11 	

HttpDelete11	 
(11 
$str11 
)11 
]11 
public22 
async22 
Task22 
<22 
IResult22 !
>22! "
Delete22# )
(22) *
[22* +
FromServices22+ 7
]227 8
ISender229 @
sender22A G
,22G H
int22I L
id22M O
,22O P
[22Q R
	FromRoute22R [
]22[ \ 
DeleteProductCommand22] q
command22r y
)22y z
{33 	
if44 
(44 
id44 
!=44 
command44 
.44 
Id44  
)44  !
{55 
return66 
Results66 
.66 

BadRequest66 )
(66) *
)66* +
;66+ ,
}77 
await99 
sender99 
.99 
Send99 
(99 
command99 %
)99% &
.99& '
ConfigureAwait99' 5
(995 6
false996 ;
)99; <
;99< =
return;; 
Results;; 
.;; 
	NoContent;; $
(;;$ %
);;% &
;;;& '
}<< 	
}== 
}>> ²)
UE:\repos\e-shop\CatalogService\CatalogService.Web\Controllers\CategoriesController.cs
	namespace 	
CatalogService
 
. 
Web 
. 
Controllers (
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class  
CategoriesController %
:& '
ControllerBase( 6
{ 
[ 	
HttpGet	 
] 
public 
Task 
< 
IReadOnlyCollection '
<' (
CategoryDto( 3
>3 4
>4 5
Get6 9
(9 :
[: ;
FromServices; G
]G H
ISenderI P
senderQ W
,W X
[Y Z
	FromQueryZ c
]c d
GetCategoriesQuerye w
queryx }
)} ~
{ 	
return 
sender 
. 
Send 
( 
query $
)$ %
;% &
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IResult !
>! "
Get# &
(& '
[' (
FromServices( 4
]4 5
ISender6 =
sender> D
,D E
intF I
idJ L
,L M
[N O
	FromRouteO X
]X Y
GetCategoryQueryZ j
queryk p
)p q
{ 	
if 
( 
id 
!= 
query 
. 
Id 
) 
{ 
return 
Results 
. 

BadRequest )
() *
)* +
;+ ,
} 
return   
Results   
.   
Ok   
(   
await   #
sender  $ *
.  * +
Send  + /
(  / 0
query  0 5
)  5 6
.  6 7
ConfigureAwait  7 E
(  E F
false  F K
)  K L
)  L M
;  M N
}!! 	
[## 	
HttpPost##	 
]## 
public$$ 
Task$$ 
<$$ 
int$$ 
>$$ 
Create$$ 
($$  
[$$  !
FromServices$$! -
]$$- .
ISender$$/ 6
sender$$7 =
,$$= >
[$$? @
FromBody$$@ H
]$$H I!
CreateCategoryCommand$$J _
command$$` g
)$$g h
{%% 	
return&& 
sender&& 
.&& 
Send&& 
(&& 
command&& &
)&&& '
;&&' (
}'' 	
[)) 	
HttpPut))	 
()) 
$str)) 
))) 
])) 
public** 
async** 
Task** 
<** 
IResult** !
>**! "
Update**# )
(**) *
[*** +
FromServices**+ 7
]**7 8
ISender**9 @
sender**A G
,**G H
int**I L
id**M O
,**O P
[**Q R
FromBody**R Z
]**Z [!
UpdateCategoryCommand**\ q
command**r y
)**y z
{++ 	
if,, 
(,, 
id,, 
!=,, 
command,, 
.,, 
Id,,  
),,  !
{-- 
return.. 
Results.. 
... 

BadRequest.. )
(..) *
)..* +
;..+ ,
}// 
await11 
sender11 
.11 
Send11 
(11 
command11 %
)11% &
.11& '
ConfigureAwait11' 5
(115 6
false116 ;
)11; <
;11< =
return33 
Results33 
.33 
	NoContent33 $
(33$ %
)33% &
;33& '
}44 	
[66 	

HttpDelete66	 
(66 
$str66 
)66 
]66 
public77 
async77 
Task77 
<77 
IResult77 !
>77! "
Delete77# )
(77) *
[77* +
FromServices77+ 7
]777 8
ISender779 @
sender77A G
,77G H
int77I L
id77M O
,77O P
[77Q R
	FromRoute77R [
]77[ \!
DeleteCategoryCommand77] r
command77s z
)77z {
{88 	
if99 
(99 
id99 
!=99 
command99 
.99 
Id99  
)99  !
{:: 
return;; 
Results;; 
.;; 

BadRequest;; )
(;;) *
);;* +
;;;+ ,
}<< 
await>> 
sender>> 
.>> 
Send>> 
(>> 
command>> %
)>>% &
.>>& '
ConfigureAwait>>' 5
(>>5 6
false>>6 ;
)>>; <
;>>< =
return@@ 
Results@@ 
.@@ 
	NoContent@@ $
(@@$ %
)@@% &
;@@& '
}AA 	
}BB 
}CC 